// Generated by dts-bundle v0.7.3

declare module '@jcendal/objectid' {
    export { ObjectId } from '@jcendal/objectid/objectid';
    export type { ObjectIdOptions } from '@jcendal/objectid/types';
    export { default } from '@jcendal/objectid/objectid';
}

declare module '@jcendal/objectid/objectid' {
    import { ObjectIdOptions } from '@jcendal/objectid/types';
    export class ObjectId {
            /**
                * Low-level: Generates a 12-byte ObjectId buffer.
                * Use `ObjectId.hex()` or `ObjectId.slim()` for string output instead.
                * @param options Optional ObjectId creation options.
                * @returns Uint8Array representing the raw ObjectId.
                */
            static create(options?: ObjectIdOptions): Uint8Array;
            /**
                * Converts a 12-byte ObjectId buffer to a 24-character hex string.
                */
            static toHex(buffer: Uint8Array): string;
            /**
                * Converts a 12-byte ObjectId buffer to a slim string using a 64-char alphabet.
                */
            static toSlim(buffer: Uint8Array, chars?: string): string;
            /**
                * Generates a hex string ObjectId (24 hex chars).
                * @param time Optional Unix timestamp (seconds). Defaults to now.
                */
            static hex(timestamp?: number): string;
            /**
                * Generates a slim/base64-like string ObjectId.
                * @param time Optional Unix timestamp (seconds). Defaults to now.
                * @param chars Optional 64-character alphabet string.
                */
            static slim(timestamp?: number, chars?: string): string;
    }
    const _default: typeof ObjectId.hex;
    export default _default;
}

declare module '@jcendal/objectid/types' {
    /**
        * Options for ObjectId creation.
        */
    export type ObjectIdOptions = {
            /**
                * Optional Unix timestamp in seconds. Defaults to current time.
                */
            timestamp?: number;
    };
}

